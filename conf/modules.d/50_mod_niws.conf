<IfDefine !MODULES_PATH>
    Define MODULES_PATH lib/apache2/modules
</IfDefine>
<IfDefine !NIWS_CONTAINER_PATH>
    Define NIWS_CONTAINER_PATH ${MODULES_PATH}/NIWebServiceContainer
</IfDefine>

LoadModule niws_module ${MODULES_PATH}/mod_niws.so
LoadModule rewrite_module ${MODULES_PATH}/mod_rewrite.so
LoadModule websocket_module ${MODULES_PATH}/mod_websocket.so

# NI web service process isolation settings.
NiWsContainerPath ${NIWS_CONTAINER_PATH}
NiWsMaxRequests 64

<NiWsOverrides>
    # Directives that only apply to NI web services requests.
    # By default, prevent most cross-origin requests.
    #RewriteEngine on
    #RewriteCond expr "! %{REQUEST_METHOD} in { 'GET', 'HEAD', 'OPTIONS', 'PROPFIND', 'TRACE' }"
    #RewriteCond expr "-n req_novary('Origin')"
    #RewriteCond expr "! req_novary('Origin') -strcmatch '%{REQUEST_SCHEME}://%{HTTP_HOST}'"
    #RewriteRule ^.* - [forbidden,last]
    #Header always add Access-Control-Allow-Origin *
    Header always add Access-Control-Allow-Origin expr=%{req_novary:Origin}
    Header always add Access-Control-Allow-Credentials true
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, HEAD"
</NiWsOverrides>

<NiWsSocketOverrides>
    # Directives that only apply to web socket requests to NI web services.
    SetHandler websocket-handler
    WebSocketHandler ${MODULES_PATH}/mod_niws.so niws_websocket
    ErrorDocument 426 "<h1>Upgrade Required</h1><p>The resource at %{REQUEST_URI} requires upgrading to a WebSocket connection.</p>"
</NiWsSocketOverrides>

<Location />
    <If "%{HTTP_USER_AGENT} =~ /Mozilla/">
        # Directives that only apply to clients that claim they
        # are Mozilla compatible (i.e. browsers).

        <NiWsOverrides>
            # Web services may want to know the logged in user
            # without requiring authorization.
            Session On
        </NiWsOverrides>

        <NiWsAuthOverrides>
            # Directives that only apply to NI web services requests that require authentication.
            # Set redirection URI --> AUTH_REDIR_URI cookie. This will be later processed by the log-in page.
            # ToDo: We probably need to uniquify the cookie per request somehow. Parallel requests will clobber each other.
            Header always add Set-Cookie "AUTH_REDIR_URI=%{AUTH_REQUEST_URI}e;path=/;" "expr=-z %{REMOTE_USER}"
			#Header always set Access-Control-Allow-Headers "x-requested-with, Content-Type, origin, authorization, accept, client-security-token"
        </NiWsAuthOverrides>
    </If>
</Location>
